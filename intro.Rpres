<style type="text/css">
.small-code pre code {
   font-size: 1.3em;
}
</style>

Intro to ggplot2
========================================================
author: Max Joseph & Joe Mihaljevic
font-family: Helvetica
date: Oct 1 2013

What is ggplot2?
========================================================

R package for visualization based on the grammar of graphics.

Developed primarily by Hadley Wickham

 - [ggplot2 website](http://ggplot2.org/)

 - [source code](https://github.com/hadley/ggplot2)

Grammar of graphics
========================================================

A syntactic and conceptual framework for producing graphics.

![](http://www.r-bloggers.com/wp-content/uploads/2006/10/2006-06-22_useR2006_GrammarGraphics_0387245448.02.LZZZZZZZ1.jpg)

Implementation in ggplot2
========================================================
One syntactic framework for many plots

Elements
========================================================

Plots emerge from layered components:
- data (= geometric objects)
- axes (scales)
- grouping
- coordinate systems

Getting started 
==========================
class: small-code
```{r eval=FALSE}
install.packages("ggplot2")
```


Data
==============
class: small-code
ggplot2 uses data frames
```{r}
# load data
data(msleep)

# check object class
class(msleep)
```

Aesthetics & geoms
==========================================
class: small-code
Specification in ggplot()
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point()
```

Aesthetics & geoms
==========================================
class: small-code
Specificying aesthetic in geom
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep) + geom_point(aes(x=bodywt, y=brainwt))
```

Axis scaling
===================================
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point() + scale_y_log10() + scale_x_log10()
```

Black and white theme
=======
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point() + scale_y_log10() + scale_x_log10() + theme_bw()
```

Classic theme
=============
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point() + scale_y_log10() + scale_x_log10() + theme_classic()
```

Smoothing
============
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point() + scale_y_log10() + scale_x_log10() + stat_smooth()
```

OLS regression line
====================
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point() + scale_y_log10() + scale_x_log10() +  stat_smooth(method="lm")
```

Faceting
=============
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=bodywt, y=brainwt)) + geom_point() + scale_y_log10() + scale_x_log10() +  stat_smooth(method="lm") + facet_wrap(~vore)
```

Line plots
==============
class: small-code
```{r fig=TRUE, fig.width=12, fig.height=6}
data(co2)
ggplot(data.frame(co2), aes(x=1:length(co2), y=co2)) + geom_line()
```

Box plots
=========
class: small-code
```{r fig=T, fig.width=12, fig.height=6}
ggplot(msleep, aes(x=conservation, y=awake)) + geom_boxplot()
```

Combining plot types
====================
class: small-code
```{r fig=T, fig.width=15, fig.height=6}
require(gridExtra)
p1 <- ggplot(msleep, aes(x=conservation, y=awake)) + geom_boxplot()
p2 <- ggplot(msleep, aes(x=sleep_cycle, y=awake, color=conservation)) + geom_point() + stat_smooth(method="lm")
grid.arrange(p1, p2, ncol=2)
```

Other aesthetics
==============================
- shape
- size
- linetype
- alpha
- fill

All can be mapped to variables (just like x & y)

Specific examples
==========================
- scatterplot + smoothing + faceting (Joe)
- points w. error bars (Max)
- line plots + groupings (Max)
- boxplots (Max)
- faceting
- combining plot types (gridExtra, Max)
- stat_smooth
- more complex plot (grouping/faceting)